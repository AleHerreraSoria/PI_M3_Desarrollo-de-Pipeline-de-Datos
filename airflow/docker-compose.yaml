# ############################################################################
# Docker Compose para un entorno de desarrollo local de Apache Airflow
# Versión final para habilitar el DockerOperator
# ############################################################################

services:
  # Servicio de Base de Datos (PostgreSQL) para la metadata de Airflow
  postgres:
    image: postgres:13
    container_name: postgres_airflow
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Servicio de inicialización de la base de datos de Airflow
  airflow-init:
    # build: . le dice a Docker Compose que construya la imagen a partir
    # del Dockerfile que está en la misma carpeta.
    build: .
    container_name: airflow_init
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin
      "

  # El planificador de tareas de Airflow (Scheduler)
  airflow-scheduler:
    build: . # Usa la imagen personalizada
    container_name: airflow_scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      # Conectar el socket de Docker del host al contenedor de Airflow
      - /var/run/docker.sock:/var/run/docker.sock
      # Montar las credenciales en una ruta estándar y segura
      - ./gcp_credentials.json:/usr/local/share/credentials/gcp_credentials.json:ro
    command: scheduler

  # El servidor web de Airflow (Webserver)
  airflow-webserver:
    build: . # Usa la imagen personalizada
    container_name: airflow_webserver
    depends_on:
      airflow-scheduler:
        condition: service_started
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      # Conectar también el socket de Docker aquí
      - /var/run/docker.sock:/var/run/docker.sock
      # Montar también las credenciales aquí
      - ./gcp_credentials.json:/usr/local/share/credentials/gcp_credentials.json:ro
    command: webserver

volumes:
  postgres_data:

